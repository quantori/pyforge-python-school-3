name: Run tests workflow

on:
  push:
    branches:
      - main  
      - develop
      - feature/3
    tags:
      - 'v*'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Initial Release with Molecules CRUD, File Upload, Substructure Search and Load Balancing ${{ github.ref_name }}
          body: |
            I'm excited to announce the initial release of my Molecules Application!
            This release marks the debut of our application designed to perform CRUD (Create, Read, Update, Delete), upload_file, and substructure_search operations on molecular data. This version includes essential features for managing molecular data, testing, and Docker support for seamless deployment.

            ###New Features:

            - **CRUD Operations:** Implemented functionality to create, read, update, and delete molecular records.
            - **File Upload:** Added capability to upload files (e.g., JSON) containing molecular data for processing and management.
            - **Substructure Search:** Introduced a feature for searching molecular data based on substructures
            - **Docker Support:** Configured Docker and Docker Compose to containerize the application, making it easy to deploy and run in various environments.
            - **Load Balancing:** Configured a load-balancing mechanism to distribute requests between two application containers, web1 and web2
            - **Automated Testing:** Set up GitHub Actions for continuous integration, including running tests in Docker containers to ensure code quality and reliability.

            ### Installation & Setup:
            1. **Clone the Repository:**
            ```bash
            git clone https://github.com/adellyadrian/pyforge-python-school-3
            cd pyforge-python-school-3
            ```
          draft: false
          prerelease: false

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./path/to/your/asset.zip
          asset_name: asset.zip
          asset_content_type: application/zip

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Install Python dependencies
        run: docker-compose exec -T web1 pip install -r requirements.txt

      - name: Run tests with pytest
        run: |
          set -e
          docker-compose exec -T web1 pytest tests/test.py -vv

      - name: Shutdown Docker containers
        if: always()
        run: docker-compose down
